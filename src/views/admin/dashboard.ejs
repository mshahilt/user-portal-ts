<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admin - Manage Users</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body>
  <div class="container mt-5">
    <h1 class="text-center mb-4">User Management</h1>
    <a href="/admin/add-user"><button class="btn-secondary btn">Add User</button></a>
    <table class="table table-striped">
      <thead>
        <tr>
          <th>#</th>
          <th>Name</th>
          <th>Email</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        <% users.forEach((user, index) => { %>
        <tr>
          <td><%= index + 1 %></td>
          <td><%= user.name %></td>
          <td><%= user.email %></td>
          <td>
            <button class="btn btn-secondary btn-sm" data-bs-toggle="modal" data-bs-target="#editModal<%= user._id %>">Edit</button>
            <button class="btn btn-dark btn-sm delete-btn" data-user-id="<%= user._id %>">Delete</button>
          </td>
        </tr>
        <div class="modal fade" id="editModal<%= user._id %>" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Edit User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
              <form id="editForm<%= user._id %>">
                <div class="modal-body">
                  <div class="mb-3">
                    <label for="name<%= user._id %>" class="form-label">Name</label>
                    <input type="text" class="form-control" id="name<%= user._id %>" name="name" value="<%= user.name %>" required>
                  </div>
                  <div class="mb-3">
                    <label for="email<%= user._id %>" class="form-label">Email</label>
                    <input type="email" class="form-control" id="email<%= user._id %>" name="email" value="<%= user.email %>" required>
                  </div>
                </div>
                <div class="modal-footer">
                  <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                  <button type="button" class="btn btn-primary save-btn" data-user-id="<%= user._id %>">Save Changes</button>
                </div>
              </form>
            </div>
          </div>
        </div>
        <% }); %>
      </tbody>
    </table>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    document.querySelectorAll('.save-btn').forEach(button => {
    button.addEventListener('click', async () => {
        const userId = button.getAttribute('data-user-id');
        const form = document.querySelector(`#editForm${userId}`);

        const formData = new FormData(form);

        const data = Object.fromEntries(formData.entries());

        try {
        const response = await fetch(`/admin/edit-user/${userId}`, {
            method: 'POST',
            headers: {
            'Content-Type': 'application/json'
            },
            body: JSON.stringify(data) 
        });

        if (response.ok) {
            Swal.fire({
            icon: 'success',
            title: 'Success',
            text: 'User details updated successfully!',
            timer: 2000,
            showConfirmButton: false
            });

            setTimeout(() => {
            location.reload();
            }, 2000);
        } else {
            const error = await response.json();
            Swal.fire({
            icon: 'error',
            title: 'Error',
            text: error.message || 'Failed to update user details.',
            });
        }
        } catch (error) {
        console.error('Error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An unexpected error occurred.',
        });
        }
    });
    });
    document.querySelectorAll('.delete-btn').forEach(button => {
  button.addEventListener('click', () => {
    const userId = button.getAttribute('data-user-id');

    Swal.fire({
      title: 'Are you sure?',
      text: "You won't be able to revert this!",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Yes, delete it!'
    }).then(async (result) => {
      if (result.isConfirmed) {
        try {
          const response = await fetch(`/admin/delete-user/${userId}`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ userId })
          });

          if (response.ok) {
            Swal.fire('Deleted!', 'The user has been deleted.', 'success');
            setTimeout(() => {
              location.reload();
            }, 1500);
          } else {
            const error = await response.json();
            Swal.fire('Error!', error.message || 'Failed to delete the user.', 'error');
          }
        } catch (error) {
          console.error('Error:', error);
          Swal.fire('Error!', 'An unexpected error occurred.', 'error');
        }
      }
    });
  });
});

  </script>
</body>
</html>
